Dokcer file--> Dokcer images(Package which contains everything  to run a piece of siftware/application) --> Docker conatiner(Process where 
app is running . ots a run time instace of an image)

Dangling Image:- Image nit tagged with any repo.  

if you wanna delete all dongling images
docker image prune:- it will remove all dangling images
docker system prune:- it will delete all dangling images, stopped containers and unused docker networks.
docker conatiner prune:- it will delete all stopper conatiners. 

ubuntu@ip-172-31-2-98:~$docker image prune

we have dangling image but cant delete after applying docker prune also. why bcoz it is running in one container. To check the running conatiners. 
here we can see our dangling image under one running container ID.

ubuntu@ip-172-31-2-98:~$docker ps


if we wanna delete the conatiner: docker rm <conatiner name/ID>
                                  docker rm -f <conatiner name/ID>


ubuntu@ip-172-31-2-98:~$docker ps -q
6ss28gsj
2fsrhav9

here it will display all running conatiner ID's. if we wanna delete all running conatiners.

ubuntu@ip-172-31-2-98:~$docker rm -f $(docker ps -q)

if we wanna delete all containers(running+stopped): ubuntu@ip-172-31-2-98:~$docker rm -f $(docker -aq)

if we want to see only stopped containers

docker ps -f "status=Exited" OR docker ps -a -f "status=Exited"

if we wanna delete only stopped conatiners 

docker conatiner prune   OR    docker rm $(docker ps -aq -f "status=Exited")

if we wanna delete only running conatiners 

docker rm $(docker ps -aq -f "status=Running")

if we want to see only dangling images:-  docker images -f dangling=true

*we cant do port binding or port mapping or volume mapping for running containers. we can only do all these mapping whiel creating a container.

#some commands we are not going to use
docker pause <conatinername/ID>  --> it will pause the conatiner for browsing. we cant access it untill you unpause.
docker ps  --> it will display paused status to that container.

docker unpause <conatinername/ID> --> it will unpause and browse the conatiner.


*docker stop <conatinername/ID>  --> it will stop the conatiner gracefully. whaetver process running inside the conatiner for pricess termination signla.

*docker kill <conatinername/ID> --> it will also stop the conatiner. but forcefully. it will forcefully terminate the process.
*after doing both we can restart also using: docker start <conatinername/ID>

ubuntu@ip-172-31-2-98:~$docker kill 6ss28gsj
ubuntu@ip-172-31-2-98:~$docker ps 
ubuntu@ip-172-31-2-98:~$docker ps -a
ubuntu@ip-172-31-2-98:~$docker start 6ss28gsj

  
RENAMING
=========
docker rename <oldname>  <newname>

ubuntu@ip-172-31-2-98:~$docker ps
3gsfu5ihj121
ubuntu@ip-172-31-2-98:~$docker logs 3gsfu5ihj121

above we can get all logs relatd to the conatiner. docker logs <conatinerID/name>
as part of your conatiner you are running some program /some application. whateve send to system.out and system.err will be displayed in console.
here we can see tomcat logs

if youwant to display onl last 10 lines: docker logs <containerID/Name> --tail 10
if we want 20. we can put 20 and will get the 20 lines.

docker logs 3gsfu5ihj121 -f  --> it will display all floating logs contineously. running logs. if you wanna come out just type CTRL+C

if you want to move that all logs to one txt file if development team asks for details of logs.
ubuntu@ip-172-31-2-98:~$docker logs 3gsfu5ihj121 >> mavenwevbapplication.txt

==>
docker top <containerID/Name> 

it will disply what processes are running in that container. below tomcat is running. 
ubuntu@ip-172-31-2-98:~$docker top 3gsfu5ihj121
UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
root                2720                2698                0                   02:42               ?                   00:00:09            /usr/bin/java -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.endorsed.dirs=/usr/local/tomcat/endorsed -classpath /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar -Dcatalina.base=/usr/local/tomcat -Dcatalina.home=/usr/local/tomcat -Djava.io.tmpdir=/usr/local/tomcat/temp org.apache.catalina.startup.Bootstrap start


*Can we have/run more than one processin single container?
-> technically yes, but its not recommended to run more than one process in single conatiner. bcoz we have to isolate each conatiner.

==> To check the CPU utilization/Memory(RAM) usage
docker stat <containerID/Name> 

ubuntu@ip-172-31-39-160:~$ docker stats f48997b1391c
CONTAINER ID   NAME                  CPU %     MEM USAGE / LIMIT     MEM %     NET I/O           BLOCK I/O         PIDS
f48997b1391c   mavenwebapplication   0.32%     150.7MiB / 965.7MiB   15.61%    8.18kB / 74.5kB   65.4MB / 7.59MB   28
CONTAINER ID   NAME                  CPU %     MEM USAGE / LIMIT     MEM %     NET I/O           BLOCK I/O         PIDS
f48997b1391c   mavenwebapplication   0.11%     150.7MiB / 965.7MiB   15.61%    8.18kB / 74.5kB   65.4MB / 7.59MB   28

above we can see the cpu and memory(RAM) utilization to that container 150. 7 mb out of 965 mb and pecentage also we can see.
965mb is our t2.micro memory. 

Can we limit to my containers? i dont want to take my conatiner more than some limit usage of memory/CPU utilization?
Yes, we can find out those commands in docker documentation to set a limit. Runtime options with Memory, CPUs, and GPUs browse in google. we have to
set this limit while running the conatiner.

docker run -d --name <conatinername> -p <hostport:containerport> <imagename> --cpu="1.5" -m=500m
Specify how much of the available CPU resources a container can use. For instance, if the host machine has two CPUs and you set --cpus="1.5", the container 
is guaranteed at most one and a half of the CPUs.


*What happens if the conatiner is running out fo memory?
We wont get quick response and process will be very slow. it will kill the application/process. 


==> We can execute commands on conatiner. 
    docker exec <containerID/Name> <command>

ubuntu@ip-172-31-39-160:~$ docker exec f48997b1391c ls
LICENSE
NOTICE
RELEASE-NOTES
RUNNING.txt
bin
conf
lib
logs
temp
webapps
work

ubuntu@ip-172-31-39-160:~$ docker exec f48997b1391c pwd
/usr/local/tomcat

ubuntu@ip-172-31-39-160:~$ docker exec f48997b1391c ls webapps
ROOT
docs
examples
host-manager
manager
maven-web-application
maven-web-application.war

==>
We can go inside the conatiner and work. it-> interactive. inside we can execute any command. 

docker exec -it <containerID/Name> /bin/bash

ubuntu@ip-172-31-39-160:~$ docker exec -it f48997b1391 /bin/bash
root@f48997b1391c:/usr/local/tomcat# ls
LICENSE  NOTICE  RELEASE-NOTES  RUNNING.txt  bin  conf  lib  logs  temp  webapps  work
root@f48997b1391c:/usr/local/tomcat# pwd
/usr/local/tomcat
root@f48997b1391c:/usr/local/tomcat# ls webapps/
ROOT  docs  examples  host-manager  manager  maven-web-application  maven-web-application.war

Above we can execute any command and we can check all dependency soaftwares inside (tomcat, java). but we cannot see some commands which are not necessery to run docker
and container. like vi command. conatiner should have minimul software and it is light weight. so it deletes all unneccessry packages, modules, commands, mvnetc. 

we can do some changes inside the container. i m installing some softwares inside the conatiners. 

root@f48997b1391c:/usr/local/tomcat#apt install vim
.
.
.
root@f48997b1391c:/usr/local/tomcat#vi /confu/server.xml

here we can get edir option. 

root@f48997b1391c:/usr/local/tomcat#exit
will come out and then stop the conatiner and start the conatiner again. there also we will get that vi editor comment. but we wont get that command when we delete
and create new conatiner. 

All requiered confirguarationwill do while creating an image. it will not recommned any images while in conatiner. 

==> Dokcer commit <containername/ID> <imagename>

this commit command will be used to save the changes we have done in our container. it will create one more image in conatiner with new name that you give 
with chnages that we have done. and it will consuem more space.

ubuntu@ip-172-31-39-160:~$ docker commit f48997b1391 containerregistry/maven-web-application-from-conatiner:1

we will not do this thing in real time. whatever you want in conatiner we should do in dockerfile itself while creating.

==> Docker attach 
It will attach container process(shell) ti the current system process (shell).

ubuntu@ip-172-31-39-160:~$ docker attached f48997b1391

go and browse the application with public IP address. here in our console we can see those chnages happening in that browser in live. using this we can find out 
errors, some exceptions and debug the process. if i press CTRL+C it will stops/kill that process. 

==> docker cp 
Using this command we will copy any file from container to our local system or sytem to container.

docker cp <source> <destination>

#Conatiner to system:
docker cp <containername/ID>:/<file/folder path of the conatiner> <systempath>

#system to container:
docker cp <systempath> <containername/ID>:/<file/folder path of the conatiner>

ubuntu@ip-172-31-39-160:~$ docker ps 

here we can  see NAME in the end of that line. copy that (mavenapp)
ubuntu@ip-172-31-39-160:~$ docker exec mavenapp ls logs
.
.
.
here will get some file. i want to copy this file to our local system. it will copy to the current directory.
ubuntu@ip-172-31-39-160:~$ docker cp mavenapp:/usr/local/tomcat/logs/catalina.2021.23.21.log mavenappconatiner.log
ubuntu@ip-172-31-39-160:~$ docker ls
.....     ....       ......      mavenappconatiner.log


Docker File
============
Its a file which contains docker DSL keywords/Instructons  using  which we can create an image quickly. Docker will 
process these instructions from top to bottom in the order.

Docker DSL- Dokcer Domain Specific language 

Instructions:
--------------
==>FROM  ->From indicates the base image using which we are craeting our own image.
         if we dont give any version name after base image name. it will consider latest version. 

Syntax: FROM <registry/repo>:<version>
 EX: FROM tomcat:8.0.j re8
     FROM node

Every app/software have multiple layers. so tomcat have (conatiner run time(libersies to talk host kernel)+java+Tomcat)

==>MAINATINER -> its deprecated. its like a documentation. its author and it maintains this docker file.

MAINATINER Mithun Tech <devopstraining@gamil.com>

==>COPY
We can copy files/folders  to the image  from local  system  (the system where we are creating  images). COPY will copy files/folders while creating an image. 

Syntax:
      <local sytem path>  <Image file system path>
COPY       <source>           <Destination>

EX: COPY target/jave-web-app*.war /usr/local/tomcat/webapps/java-web-app.war

COPY . .   --> First dot represents where we are building our image and second dot its a working directory of the image. 

*Diff btw docker cp and COPY?
Dokcer CP:- we copy file from conatiner to local system or vice versa
COPY:- Copy file to the image while creating an image.

==>ADD
ADD can also copy files to image. we can copy local files and we can download files from remote http(s) endpoints.  

Syntax:
ADD <sourcepath> <destinationpath>
EX: ADD target/jave-web-app*.war /usr/local/tomcat/webapps/java-web-app.war

ADD <sourceURL>  <destinationpath>

EX: ADD https://downloads.apache.org/tomcat/tomcat-9/v9.0.78/bin/apache-tomcat-9.0.78.zip.asc /usr/local/tomcat/webapps/java-web-app.war

above we have copyed tomcat8 version zip file and copying/adding to local system.
*if we are adding from tar file. it must have .tar extension. it will extract automatically. if its other than that also weill not accept.
for ex: .tar.gz also doesnt workout.

==> We can execute commands using RUN,CMD,ECTRYPOINT instructions.

=>RUN--> RUN instruction or command will be executed while creating an image. we can have n-number of RUN instructions in a dockerfile all these RUN instructions   
will be executed in top to bottom order.

Syntax: RUN <command>
Ex: RUN mkdir -p /usr/local/tomcat  -->These instrctions will be executed on top of base image. if base image doesn't have any package/command in it. it will not
exected in RUN command. but we can instakl using below 

RUN apt update -y && apt install unzip
RUN unzip tomcat.zip





