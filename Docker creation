lets create one instance in aws with Ubuntu server and set server name as Build-Server. now go nad connect to this ssh with linux.
go to git hub of mithun technologies and take " Maven web application" project. here we have docker file already, if not we have to create it. now copy that link code and clone to our linux.
[ec2-user....]$git clone https://github.com/MithunTechnologiesDevOps/maven-web-application.git
[ec2-user...]$ ls
Maven-web-application
[ec2-user] cd maven-web-appliaction
[ec2-user ...maven-web-application] ls maven-web-appliaction
Dockerfile   Jenkinsfile ........
[ec2-user]$rm Dockerfile

Above we have Docker file but lets remove and create our own.  this project is java based appliaction so we need Java and Tomcat/Jboss/wildfly as a application server to run that project.
we get this in DockerHub and always we should refer Official Images.  bcoz we dont get any hacking code here and these are not vulnerable.
[ec2-user...]$ vi Dockerfile

FROM tomcat:7-Jdk8-correctto
COPY target/maven-web-application*.war/usr/local/tomcat/webapps/maven-web-appliaction.war
:wq

AboveTomcat is a repo and 7-Jdk8-correctto is a version and next we have to copy our application.
target/maven-web-application.war- is where our appliaction is
usr/local/tomcat/webapps/java-web-appliaction.war- is whwere it has to get copied. 
/usr/local/tomcat- for this part . go to that tomact image in dockerhub and come down, there we can see 
CATALINA HOME- /usr/local/tomcat    Tomcat home directory. 

now we have to create a docker image. we need to install docker here
ubuntu@ip172-12-23-12:~maven-web-appliaction$ sudo apt install docker.io -y
.
.
.
. 
ubuntu@ip172-12-23-12:~maven-web-appliaction$ sudo apt update -y
.
.
.
.
above we have installed docker in Ubuntu - sudo apt docker.io and for updation sudo apt update -y

now we have to create a docker image. so we need to create our own account in Docker Hub and take that Username ( its a Registry). for building docker image
docker build -t  <registry/repo>:<version> . 
-t means we are tagging that built image to some registry and dot at the end presents that current dir.
then we have to move that image to public registry in Dockerhub. and create one repo. then 
EX: 
ubuntu@ip172-12-23-12:~maven-web-appliaction$docker build -t dockerhandson/maven-web-appliaction:1 .

above we are going to build an image in our maven-web-appliaction bcoz we have our dockerfile inside. but we would face permission deny. so craete one user in docker 
ubuntu@ip172-12-23-12:~maven-web-appliaction$ sudo usermod -aG docker ubuntu  OR 
ubuntu@ip172-12-23-12:~maven-web-appliaction$ sudo usermod -aG docker $USER  --> It will consider all users not only ubuntu. 

our server would face permission issue so we created one user and gave permission to ubuntu directly. then restart the server again.

ubuntu@ip172-12-23-12:~maven-web-appliaction$docker build -t dockerhandson/maven-web-appliaction:1 .

first it will download the base softwares and then build the image but here we get an error like no source file were specified bcoz we dont have appilication package
here we just have its source code. so for creating a package
ubuntu@ip172-12-23-12:~maven-web-appliaction$sude apt install maven -y

now it will install maven and its depedency software like java and all. now go ahead and craete a package and we can see this in target folder. 
ubuntu@ip172-12-23-12:~maven-web-appliaction$mvn clean packge
ubuntu@ip172-12-23-12:~maven-web-appliaction$ls targer/

then craete one more ubuntu instance to deploy the image. name of that instance is Docker_Dev_Server  it works as a container now. and it should have docker installed. so open its ssh and install docker. 

ubuntu@ip172-12-23-12:~maven-web-appliaction$ sudo apt update
ubuntu@ip172-12-23-12:~maven-web-appliaction$ sudo apt install docker.io -y

now go to first linux and build the image
 ubuntu@ip172-12-23-12:~maven-web-appliaction$docker build -t dockerhandson/maven-web-appliaction:1 . 
ubuntu@ip172-12-23-12:~maven-web-appliaction$docker image
dockerhandson/maven-web-appliaction 1  2crafskfi23   6 sec ago    380MB
tomcat                              7-jdk8-correcto 47-3dif736  30 hrs ago  374MB

above we have image with 380mb but tomcat with 374mb. why bcoz we image contain dependency software.
now we have to push that image to container. but before we have to give authentocation to our server ( dockerhandson is username of dockerhub)

ubuntu@ip172-12-23-12:~maven-web-appliaction$docker login -u dockerhandson
ubuntu@ip172-12-23-12:~maven-web-appliaction$docker push dockerhandson/maven-web-appliaction:1

now go and check the image in hub. we can see.

open the linux of Docker_dev_Server and create a container of our maven image. in this server give a permission to the 8080. 
