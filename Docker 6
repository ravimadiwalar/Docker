if we get an error  While creating an image and it has already created an half image. then we correct that error and 
and build the image again it will consider it from that error point. and after building also if you run that also if you biuld 
it doesn't take much time bcoz it will take that all from cache.

Below i have just created an image without tagging to any repo. 

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ cat Dockerfile
FROM ubuntu
MAINTAINER Mithun Tech <mithuntechtarining@gmail.com>
RUN ["echo",  "Welcome from RUNONE"]
RUN mkdir -p /opt/test
RUN echo RUNTWO
RUN apt update -y && apt install git -y
CMD ["echo", "Welcome to CMD"]

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$
ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ docker build -t imageone .
Sending build context to Docker daemon  2.048kB
Step 1/7 : FROM ubuntu
 ---> 5a81c4b8502e
Step 2/7 : MAINTAINER Mithun Tech <mithuntechtarining@gmail.com>
 ---> Using cache
 ---> c3b511654159
Step 3/7 : RUN ["echo",  "Welcome from RUNONE"]
 ---> Using cache
 ---> 5be5d61ad9dd
Step 4/7 : RUN mkdir -p /opt/test
 ---> Using cache
 ---> 943dd35665eb
Step 5/7 : RUN echo RUNTWO
 ---> Using cache
 ---> d6fe66971192
Step 6/7 : RUN apt update -y && apt install git -y
 ---> Using cache
 ---> cdca12f39691
Step 7/7 : CMD ["echo", "Welcome to CMD"]
 ---> Using cache
 ---> 5d82d9263afc
Successfully built 5d82d9263afc
Successfully tagged imageone:latest

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ docker run imageone
Welcome to CMD

Above we have created a container with no ports bcoz i dont have any application here. that CMD command has 
this much instructions "Welcome to CMD" so it has got executed. and chek the conatiner docker ps -a --> it would
give one uniqe name.

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ docker run imageone date
Sun Aug 13 03:47:59 UTC 2023

above we have added one more command date (pass date command) whle creating a conatiner. but it executed that date 
command in console. here we have override the CMD.

If we give one more CMD. while running the container it will consider last one and display accordingly.

*How can we see the layers of the image?
docker history <image name/ID>

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ docker history 5d82d9263afc
IMAGE          CREATED        CREATED BY                                      SIZE      COMMENT
5d82d9263afc   13 hours ago   /bin/sh -c #(nop)  CMD ["echo" "Welcome to C…   0B
cdca12f39691   13 hours ago   /bin/sh -c apt update -y && apt install git …   118MB
d6fe66971192   13 hours ago   /bin/sh -c echo RUNTWO                          0B
943dd35665eb   13 hours ago   /bin/sh -c mkdir -p /opt/test                   0B
5be5d61ad9dd   13 hours ago   echo Welcome from RUNONE                        0B
c3b511654159   13 hours ago   /bin/sh -c #(nop)  MAINTAINER Mithun Tech <m…   0B
5a81c4b8502e   6 weeks ago    /bin/sh -c #(nop)  CMD ["/bin/bash"]            0B
<missing>      6 weeks ago    /bin/sh -c #(nop) ADD file:140fb5108b4a2861b…   77.8MB
<missing>      6 weeks ago    /bin/sh -c #(nop)  LABEL org.opencontainers.…   0B
<missing>      6 weeks ago    /bin/sh -c #(nop)  LABEL org.opencontainers.…   0B
<missing>      6 weeks ago    /bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH     0B
<missing>      6 weeks ago    /bin/sh -c #(nop)  ARG RELEASE                  0B

 last 5 missing layers are from base image and top ones are from our created image.

*If we are building a image again it will take that from cache but we dint want that to take it from cache. so that time 
==> docker build -t imageone --no-cache

==> ENTRYPOINT
ENTRYPOINT also executes while running a container. 

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ vi dockerfile_ENT
ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ cat dockerfile_ENT
FROM centos
RUN ["echo", "RUNONE"]
ENTRYPOINT ["echo", "welcometoentrypoint]"

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ docker build -t imagetwo -f /home/ubuntu/Dockerfile_lab/dockerfile_ENT .
Sending build context to Docker daemon  3.072kB
Step 1/3 : FROM centos
latest: Pulling from library/centos
a1d0c7532777: Pull complete
Digest: sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177
Status: Downloaded newer image for centos:latest
 ---> 5d0da3dc9764
Step 2/3 : RUN ["echo", "RUNONE"]
 ---> Running in b23f0f891eb3
RUNONE
Removing intermediate container b23f0f891eb3
 ---> 0527f3528feb
Step 3/3 : ENTRYPOINT ["echo", "welcometoentrypoint]"
 ---> Running in 299026270ff8
Removing intermediate container 299026270ff8
 ---> 292dd08fb3c4
Successfully built 292dd08fb3c4
Successfully tagged imagetwo:latest

Above we have given a path to that new file. bcoz it will not identify if its in other name than just dockerfile and it
has two dockerfiles there. so we should give path while building an image.
But ENTRYPOINT hasn't executed yet. it will execute while running a conatiner.

if we give date command at the end. it wil display that only not todays date. bcoz ENTRYPOINT will consider that as an argument.

ubuntu@ip-172-31-0-166:~/Dockerfile_lab$ docker run imagetwo date
welcometoentrypoint date

*What if CMD and ENTRYPOINT in single dockerfile?
it will consider ENTRYPOINT and CMD instructions as a argumnets to that ENTRYPOINT(display at the end). if we give date command 
at the end while running the container. it will override and consider date not CMD instructins.










